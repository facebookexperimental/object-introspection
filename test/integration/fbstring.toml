includes = ["folly/FBString.h", "utility"]
[cases]
  [cases.empty]
    param_types = ["folly::fbstring&"]
    setup = "return {};"
    expect_json = '''
    [
      {
        "typeName": "fbstring",
        "isTypedef": true,
        "staticSize": 24,
        "dynamicSize": 0,
        "exclusiveSize": 0,
        "members": [
          {
            "staticSize": 24,
            "dynamicSize": 0,
            "exclusiveSize": 24,
            "length": 0,
            "capacity":23,
            "elementStaticSize": 1
          }
        ]
      }
    ]
    '''
    expect_json_v2 = '''[{
      "typeNames": ["folly::basic_fbstring<int8_t, std::char_traits<int8_t>, std::allocator<int8_t>, folly::fbstring_core<int8_t>>"],
      "staticSize": 24,
      "exclusiveSize": 24,
      "length": 0,
      "capacity": 23
    }]'''

  [cases.inline]
    param_types = ["folly::fbstring&"]
    setup = 'return {"012345"};'
    expect_json = '''
    [
      {
        "typeName": "fbstring",
        "isTypedef": true,
        "staticSize": 24,
        "dynamicSize": 0,
        "exclusiveSize": 0,
        "members": [
          {
            "staticSize": 24,
            "dynamicSize": 0,
            "exclusiveSize": 24,
            "length": 6,
            "capacity": 23,
            "elementStaticSize": 1
          }
        ]
      }
    ]
    '''
    expect_json_v2 = '''[{
      "typeNames": ["folly::basic_fbstring<int8_t, std::char_traits<int8_t>, std::allocator<int8_t>, folly::fbstring_core<int8_t>>"],
      "staticSize": 24,
      "exclusiveSize": 24,
      "length": 6,
      "capacity": 23
    }]'''

  [cases.heap_allocated]
    param_types = ["folly::fbstring&"]
    setup = 'return {"abcdefghijklmnopqrstuvwxzy"};'
    expect_json = '''
    [
      {
        "typeName": "fbstring",
        "isTypedef": true,
        "staticSize": 24,
        "dynamicSize": 26,
        "exclusiveSize": 0,
        "members": [
          {
            "staticSize": 24,
            "dynamicSize": 26,
            "exclusiveSize": 50,
            "length": 26,
            "capacity": 26,
            "elementStaticSize": 1
          }
        ]
      }
    ]
    '''
    expect_json_v2 = '''[{
      "typeNames": ["folly::basic_fbstring<int8_t, std::char_traits<int8_t>, std::allocator<int8_t>, folly::fbstring_core<int8_t>>"],
      "staticSize": 24,
      "exclusiveSize": 50,
      "length": 26,
      "capacity": 26
    }]'''

  [cases.string_pooled_unique]
    param_types = ["folly::fbstring&"]
    setup = "return folly::fbstring(1024, 'c');"
    expect_json = '''
    [
      {
        "typeName": "fbstring",
        "isTypedef": true,
        "staticSize": 24,
        "dynamicSize": 1024,
        "exclusiveSize": 0,
        "members": [
          {
            "staticSize": 24,
            "dynamicSize": 1024,
            "exclusiveSize": 1048,
            "length": 1024,
            "capacity": 1024,
            "elementStaticSize": 1
          }
        ]
      }
    ]
    '''
    expect_json_v2 = '''[{
      "typeNames": ["folly::basic_fbstring<int8_t, std::char_traits<int8_t>, std::allocator<int8_t>, folly::fbstring_core<int8_t>>"],
      "staticSize": 24,
      "exclusiveSize": 1056,
      "length": 1024,
      "capacity": 1024
    }]'''
  
  [cases.string_pooled_shared]
    param_types = ["std::pair<folly::fbstring, folly::fbstring>&"]
    setup = """
      folly::fbstring s(1024, 'c');
      return {{s, s}};
    """
    expect_json_v2 = '''[{
      "staticSize": 48,
      "exclusiveSize": 0,
      "members": [
        {
          "typeNames": ["folly::basic_fbstring<int8_t, std::char_traits<int8_t>, std::allocator<int8_t>, folly::fbstring_core<int8_t>>"],
          "staticSize": 24,
          "exclusiveSize": 1056,
          "length": 1024,
          "capacity": 1024
        }, {
          "typeNames": ["folly::basic_fbstring<int8_t, std::char_traits<int8_t>, std::allocator<int8_t>, folly::fbstring_core<int8_t>>"],
          "staticSize": 24,
          "exclusiveSize": 24,
          "length": 1024,
          "capacity": 1024
        }
      ]
    }]'''
